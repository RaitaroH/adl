#!/bin/bash
# version: 2.0.3
# Wrapper for anime-donwloader. Allows using watchlist given by trackma for a better anime watching cli experience.

tlist=$(trackma list | sed 's/\x1b\[[0-9;]*m//g ; s/^[^A-Za-z]* //g' | head -n -2 |\
  awk -F'  ' 'NR>1 {split($1,t,"."); gsub(" ", "", $2)split($2,n,"/"); print t[1]"|"n[1]"|"n[2]}')
# Explination ...
# sed is removing color formating and everything untill the first letter it finds
# head is used here to remove the last 2 lines which are also not needed
# NR>1 ignore first line which is the header
# $1 is the title plus dots ... split allows to remove the dots, sets new result to var t
# $2 is Current / All episodes split allows to get the current episode number
# gsub thingy is to remove beggining space " 2" from one digit numbers
# finally print t[1] = title and n[1] current episode number: result is like so:    Animu|x

watching_prompt() { echo "Now watching \033[0;34m$1\033[0m, $2 \033[0;34m$3 \033[0m" ;}
color_print() { echo "\033[0;36m$@ \033[0m" ;} #for normal output
color_prompt() { printf "\033[0;34m$@\033[0m" ;} #for user input
# for better readability $title and $nr will be blue
# You can find other colors here: https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux

watch() {
  # Retrieve title and nr. cat file only once
  entry="$(echo $tlist | fzf --height=15% --tac -m)"
  title="$(echo $entry | cut -d'|' -f1)"
  nr="$(($(echo $entry | cut -d'|' -f2) + 1))" #dat spacing tho
  last="$(echo $entry | cut -d'|' -f3)"

  color_print "Enter lowercase or uppercase to issue command:
    N - next episode (default, press <ENTER>)
    L - from current to Last known
    A - All available, from episode 1
    R - Rewatch current episode only
    S - Skip the watching. Straight to list update."
  color_prompt "Your choice? [N/l/a/r/s]: "
  read ans_episode
  echo
  case $ans_episode in
    ""|"n"|"N")
      watching_prompt $title "episode" "#$nr"
      { out=$(anime dl --play vlc $title --episodes $nr 2> /dev/null | tee >(cat - >&5)); } 5>&1 ;;
    "l"|"L")
      if [[ "$last" != "?" ]]; then
        watching_prompt $title "starting with episode" "#$nr"
        { out=$(anime dl --play vlc $title --episodes $nr:$last 2> /dev/null | tee >(cat - >&5)); } 5>&1
      else
        color_print "The last episode number is unknown."
        color_prompt "How many episodes after currnet you want to watch? : "
        read ans_nr
        [[ $ans_nr != "" ]] && last=$(( $nr + $ans_nr)) || last=$(( $nr + 5))
        watching_prompt $title "episodes" "#$nr to #$last"
        { out=$(anime dl --play vlc $title --episodes $nr:$last 2> /dev/null | tee >(cat - >&5)); } 5>&1
      fi ;;
    "a"|"A")
      watching_prompt $title "starting with episode" "#1"
      { out=$(anime dl --play vlc $title 2> /dev/null | tee >(cat - >&5)); } 5>&1 ;;
    "r"|"R")
      nr=$(($nr - 1))
      watching_prompt $title "episode" "#$nr"
      { out=$(anime dl --play vlc $title --episodes $nr 2> /dev/null | tee >(cat - >&5)); } 5>&1 ;;
    "s"|"S")
      color_print "Skipping watching episodes."
      color_prompt "Enter custom number: "
      read custom
      trackma update $title $custom
      trackma send
      color_print "Exiting."
      return 0 ;;
    *)
      color_print "Option not available."
      return 0 ;;
  esac

  watched=$(echo $out | grep 'Command Line Interface initialized' | wc -l)
  [[ $watched == 0 ]] && color_print "\nVLC didn't start, the anime wasn't found, or the episode wasn't found. Exiting." && return 0
  color_prompt "\n\nIncrease nr in anime list? Yes, no, or custom number [Y/n/c]: "
  read ans_update
  case $ans_update in
    ""|"y"|"Y")
      [[ $ans_episode = "r" ]] || [[ $ans_episode = "R" ]] && color_print "No need to update. Exiting." && return 0 #exit if option r/R was used before
      color_print "\nadl counted $watched episodes have been watched."
      trackma update $title $(( $watched + $nr ))
      trackma send
      return 0 ;;
    "n"|"N")
      color_print "Exiting."
      return 0 ;;
    "c"|"C")
      color_print "Enter custom number:"
      read custom
      trackma update $title $custom
      trackma send
      return 0 ;;
    *)
      color_print "Option not available."
      return 0 ;;
  esac
} #end of watch()

watch #initial call

while true; do #run as many episodes as possible one after another
  color_prompt "Want to watch another anime? [Y/n]: "
  read ans_another
  case $ans_another in
    ""|"y"|"Y")
      watch ;;
    "n"|"N")
      color_print "Exiting"
      break ;;
  esac
done
