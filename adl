#!/bin/bash
# version: 2.1.5
# Wrapper for anime-donwloader. Allows using watchlist given by trackma for a better anime watching cli experience.

# Exit if vlc is not installed
if ! [ -x "$(command -v vlc)" ]; then
  echo 'Error: VLC is not installed.' >&2
  exit 1
fi

# tlist=$(trackma list | sed 's/\x1b\[[0-9;]*m//g ; s/^[^A-Za-z]* //g' | head -n -2 |\
  # awk -F'  ' 'NR>1 {split($1,t,"."); gsub(" ", "", $2)split($2,n,"/"); print t[1]"|"n[1]"|"n[2]}')
tlist=$(trackma list | head -n -2 | tail -n +2)
# Explination ...
# sed is removing color formating and everything untill the first letter it finds
# head is used here to remove the last 2 lines which are also not needed
# NR>1 ignore first line which is the header
# $1 is the title plus dots ... split allows to remove the dots, sets new result to var t
# $2 is Current / All episodes split allows to get the current episode number
# gsub thingy is to remove beggining space " 2" from one digit numbers
# finally print t[1] = title and n[1] current episode number: result is like so:    Animu|x

watching_prompt() { echo -e "\nNow watching \033[0;34m$1\033[0m, $2 \033[0;34m$3 \033[0m" ;}
color_print() { echo -e "\033[0;36m$@ \033[0m" ;} #for normal output
color_prompt() { printf "\033[0;34m$@\033[0m" ;} #for user input
# for better readability $title and $nr will be blue
# You can find other colors here: https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux

watch() {
  # Retrieve title and nr. Parse file only once
  if [[ -z "$1" ]]; then
    entry="$(echo "$tlist" | fzf --ansi --reverse)"
    entry="$(echo "$entry" | sed 's/\x1b\[[0-9;]*m//g ; s/^[^A-Za-z]* //g' |\
      awk -F'  ' '{split($1,t,"."); gsub(" ", "", $2); split($2,n,"/"); gsub(" ", "", $4); print t[1]"|"n[1]"|"n[2]"|"$4}')"
  else
    entry="$1" #retrieved custom show from adl input
  fi
  title="$(echo "$entry" | cut -d'|' -f1)"
  nr="$(($(echo "$entry" | cut -d'|' -f2) + 1))" #dat spacing tho
   last="$(echo "$entry" | cut -d'|' -f3)"
  score="$(echo "$entry" | cut -d'|' -f4)"

  color_print "Enter lowercase or uppercase to issue command:
    N - Next episode (default, press <ENTER>)
    L - from current to Last known
    A - All available, from episode 1
    R - Rewatch current episode only
    C - Custom episode
    S - Skip the watching. Straight to list update."
  color_prompt "Your choice? [N/l/a/r/c/s]: "
  read ans_episode
  case $ans_episode in
    ""|"n"|"N")
      watching_prompt "$title" "episode" "#$nr"
      { out=$(anime dl --play vlc "$title" --episodes "$nr" 2> /dev/null | tee >(cat - >&5)); } 5>&1 ;;
    "l"|"L")
      if [[ "$last" != "?" ]]; then
        watching_prompt "$title" "starting with episode" "#$nr"
        { out=$(anime dl --play vlc "$title" --episodes "$nr":"$last" 2> /dev/null | tee >(cat - >&5)); } 5>&1
      else
        color_print "The last episode number is unknown."
        color_prompt "How many episodes after currnet you want to watch? : "
        read ans_nr
        [[ $ans_nr != "" ]] && last=$(( $nr + $ans_nr)) || last=$(( $nr + 5))
        watching_prompt "$title" "episodes" "#$nr to #$last"
        { out=$(anime dl --play vlc "$title" --episodes "$nr":"$last" 2> /dev/null | tee >(cat - >&5)); } 5>&1
      fi ;;
    "a"|"A")
      watching_prompt "$title" "starting with episode" "#1"
      { out=$(anime dl --play vlc "$title" 2> /dev/null | tee >(cat - >&5)); } 5>&1 ;;
    "r"|"R")
      nr=$(($nr - 1))
      watching_prompt "$title" "episode" "#$nr"
      { out=$(anime dl --play vlc "$title" --episodes "$nr" 2> /dev/null | tee >(cat - >&5)); } 5>&1 ;;
    "c"|"C")
      color_prompt "Enter custom number: "
      read nr
      watching_prompt "$title" "episode" "#$nr"
      { out=$(anime dl --play vlc "$title" --episodes "$nr" 2> /dev/null | tee >(cat - >&5)); } 5>&1 ;;
    "s"|"S")
      color_print "Skipping watching episodes."
      color_prompt "Enter custom number: "
      read custom
      trackma update "$title" "$custom"
      trackma send
      return 0 ;;
    *)
      color_print "Option not available."
      return 0 ;;
  esac

  watched=$(echo "$out" | grep 'Command Line Interface initialized' | wc -l)
  [[ $watched == 0 ]] && color_print "\nVLC didn't start, the anime wasn't found, or the episode wasn't found..." && return 0
	if [[ -z "$1" ]]; then #only ask if anime is in list
    color_prompt "\n\nIncrease nr in anime list? Yes, no, or custom number [Y/n/c]: "
    read ans_update
    case $ans_update in
      ""|"y"|"Y")
        [[ $ans_episode = "r" ]] || [[ $ans_episode = "R" ]] && color_print "No need to update..." && return 0 #exit if option r/R was used before
        [[ $watched -gt 1 ]] && color_print "\nadl counted $watched episodes that have been watched." && nr=$(( $watched + $nr - 1 ))
        if [[ $last == "?" ]]; then
           trackma update "$title" "$nr"
        else
          [[ $nr -le $last ]] && trackma update "$title" "$nr" || trackma update "$title" "$last"
        fi
        if [[ $score == 0 ]] && [[ $nr -ge $last ]] ; then
          color_prompt "\nAnime will be set to completed. Also rate the anime? Type score: "
          read ans_score
          [[ $ans_score != "" ]] && trackma score "$title" "$ans_score" || color_print "Skipping scoring..."
        fi
        trackma send
        return 0 ;;
      "n"|"N")
        color_print "Skipping..."
        return 0 ;;
      "c"|"C")
        color_print "Enter custom number:"
        read custom
        trackma update "$title" "$custom"
        trackma send
        return 0 ;;
      *)
        color_print "Option not available."
        return 0 ;;
    esac
  fi
} #end of watch()

clear #clear the screen

if [[ ! -z $1 ]]; then #test for user input
  if echo $tlist | grep -q "$1" ;then
    color_print "Anime found in list. Proceeding.\n"
    watch "$1|0|12|0"
  else
    color_prompt "Anime not found in list. Want to add it? [y/N]: "
    read ans_add
    echo
    case $ans_add in
      "y"|"Y")
        trackma add "$1"
        trackma send
        color_print "\nRetrieving updated anime list..."
        tlist=$(trackma list | head -n -2 | tail -n +2)
        watch ;; #anime is in list
      ""|"n"|"N")
        if [[ ! -z $2 ]]; then
          watch "$1|$2|12|0" #episode nr was specified
        else
          color_print "Episode nr not specified. adl will proceed with a few guesses. Next time add the anime to list or run: \"\$adl 'TITLE' 'EPISODE'\""
          color_print "Episode nr can still be specified later using 'Custom' option.\n"
          watch "$1|$2|12|0" #episode nr was specified
        fi ;;
    esac
  fi
else
  watch
fi

while true; do #run as many episodes as possible one after another
  color_prompt "\nWant to watch another anime? [Y/n]: "
  read ans_another
  echo
  case $ans_another in
    ""|"y"|"Y")
      watch ;;
    "n"|"N")
      color_print "Exiting.\n"
      break ;;
  esac
done
